{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 500,\n  margin: '1em'\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites,\n    waitRetrieval\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user && waitRetrieval) {\n      FavoritesListDataService.getFavoriteMovies(user.googleId).then(res => {\n        console.log(`in retrieve fav movies ${res.data}`);\n        setCards(res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user, waitRetrieval]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    if (user) {\n      setCards(prevCards => update(prevCards, {\n        $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n      }));\n      console.log(favorites);\n      let temp = favorites.splice(dragIndex, 1)[0];\n      favorites.splice(hoverIndex, 0, temp);\n      updateFavoritesSort();\n    }\n  }, [user]);\n  const updateFavoritesSort = useCallback(() => {\n    var data = {\n      _id: user.googleId,\n      favorites: favorites\n    };\n    FavoritesDataService.updateFavorites(data).then(res => {\n      console.log(res.data);\n      console.log('successfully updated');\n    }).catch(e => {\n      console.log(e);\n    });\n  });\n  useEffect(() => {\n    retrieveFavoriteMovies();\n  }, [user, waitRetrieval]);\n  const renderCard = useCallback((card, index) => {\n    console.log(card);\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"DSL0lLfqfLp8pacgQsrNgE3cepE=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","useCallback","useEffect","useState","useRef","DnDCard","FavoritesListDataService","FavoritesDataService","style","width","margin","Container","user","favorites","waitRetrieval","cards","setCards","retrieveFavoriteMovies","getFavoriteMovies","googleId","then","res","console","log","data","catch","e","moveCard","dragIndex","hoverIndex","prevCards","$splice","temp","splice","updateFavoritesSort","_id","updateFavorites","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nconst style = {\n  width: 500,\n  margin: '1em',\n}\n\nexport const Container = ({ user, favorites, waitRetrieval }) => {\n    const [cards, setCards] = useState([])\n\n    const retrieveFavoriteMovies = useCallback(() => {\n      if (user && waitRetrieval) {\n        FavoritesListDataService.getFavoriteMovies(user.googleId)\n          .then(res => {\n            console.log(`in retrieve fav movies ${res.data}`);\n            setCards(res.data);\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [user, waitRetrieval]);\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      if (user) {\n        setCards((prevCards) =>\n          update(prevCards, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, prevCards[dragIndex]],\n            ],\n          }),\n        )\n        console.log(favorites)\n        let temp = favorites.splice(dragIndex, 1)[0]\n        favorites.splice(hoverIndex, 0, temp)\n        updateFavoritesSort();\n      }\n    }, [user])\n\n    const updateFavoritesSort = useCallback(() => {\n        var data = {\n          _id: user.googleId,\n          favorites: favorites\n        }\n          FavoritesDataService.updateFavorites(data)\n            .then(res => {\n              console.log(res.data);\n              console.log('successfully updated')\n            })\n            .catch(e => {\n              console.log(e);\n            })\n    })\n\n    useEffect(() => {\n      retrieveFavoriteMovies();\n    }, [user, waitRetrieval]);\n\n    const renderCard = useCallback((card, index) => {\n      console.log(card)\n      return (\n        <DnDCard\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          poster={card.poster}\n          moveCard={moveCard}\n        />\n      )\n    }, [])\n    return (\n      <>\n        <div style={style}>\n          {cards.map((card, i) => renderCard(card, i))}\n        </div>\n      </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}