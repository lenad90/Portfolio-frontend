{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 500,\n  margin: '1em'\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites,\n    waitRetrieval,\n    doSaveFaves,\n    favoritesMoviesList\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [insertIndex, setInsertIndex] = useState(null); //  const retrieveFavoriteMovies = useCallback(() => {\n  //    if (user && waitRetrieval) {\n  //      FavoritesListDataService.getFavoriteMovies(user.googleId)\n  //        .then(res => {\n  //          console.log(`in retrieve fav movies ${res.data}`);\n  //          setCards(res.data);\n  //        })\n  //        .catch(e => {\n  //          console.log(e);\n  //        })\n  //    }\n  //  }, [user, waitRetrieval], );\n\n  useEffect(() => {\n    console.log(favoritesMoviesList);\n\n    if (favoritesMoviesList.length > 0) {\n      setCards(favoritesMoviesList);\n    }\n  }, [favoritesMoviesList]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n    setDeleteIndex(dragIndex);\n    setInsertIndex(hoverIndex);\n  });\n\n  const reorderFavorites = (favorites, deleteIndex, insertIndex) => {\n    console.log(`in reorderfavorites`);\n    console.log(favorites);\n    let temp = favorites.splice(deleteIndex, 1)[0];\n    favorites.splice(insertIndex, 0, temp);\n    console.log(favorites);\n    doSaveFaves(true);\n  }; //const updateFavoritesSort = (user, favorites) => {\n  // if (user) {\n  //    var data = {\n  //      _id: user.googleId,\n  //      favorites: favorites\n  //    }\n  //      FavoritesDataService.updateFavorites(data)\n  //        .then(res => {\n  //          console.log(res.data);\n  //          console.log('successfully updated')\n  //        })\n  //        .catch(e => {\n  //          console.log(e);\n  //        })\n  //  }\n  //}\n  //  useEffect(() => {\n  //    if (user && waitRetrieval) {\n  //      retrieveFavoriteMovies();\n  //    }\n  //  }, [user, waitRetrieval]);\n\n\n  useEffect(() => {\n    if (favorites && deleteIndex, insertIndex) {\n      reorderFavorites(favorites, deleteIndex, insertIndex);\n    }\n  }, [user, favorites, deleteIndex, insertIndex]);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"HkoNPvGYScVHoSLhlGXmVyIDxag=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","useCallback","useEffect","useState","DnDCard","FavoritesListDataService","FavoritesDataService","style","width","margin","Container","user","favorites","waitRetrieval","doSaveFaves","favoritesMoviesList","cards","setCards","deleteIndex","setDeleteIndex","insertIndex","setInsertIndex","console","log","length","moveCard","dragIndex","hoverIndex","prevCards","$splice","reorderFavorites","temp","splice","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nconst style = {\n  width: 500,\n  margin: '1em',\n}\n\nexport const Container = ({ user, favorites, waitRetrieval, doSaveFaves, favoritesMoviesList }) => {\n\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [insertIndex, setInsertIndex] = useState(null);\n\n//  const retrieveFavoriteMovies = useCallback(() => {\n//    if (user && waitRetrieval) {\n//      FavoritesListDataService.getFavoriteMovies(user.googleId)\n//        .then(res => {\n//          console.log(`in retrieve fav movies ${res.data}`);\n//          setCards(res.data);\n//        })\n//        .catch(e => {\n//          console.log(e);\n//        })\n//    }\n//  }, [user, waitRetrieval], );\n\n  useEffect(() => {\n    console.log(favoritesMoviesList);\n    if (favoritesMoviesList.length > 0) {\n      setCards(favoritesMoviesList);\n    }\n  }, [favoritesMoviesList])\n\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n      setDeleteIndex(dragIndex);\n      setInsertIndex(hoverIndex);\n  })\n  \n  const reorderFavorites = (favorites, deleteIndex, insertIndex) => {\n    console.log(`in reorderfavorites`);\n    console.log(favorites)\n    let temp = favorites.splice(deleteIndex, 1)[0]\n    favorites.splice(insertIndex, 0, temp)\n    console.log(favorites)\n    doSaveFaves(true);  \n  }\n\n  //const updateFavoritesSort = (user, favorites) => {\n   // if (user) {\n  //    var data = {\n  //      _id: user.googleId,\n  //      favorites: favorites\n  //    }\n  //      FavoritesDataService.updateFavorites(data)\n  //        .then(res => {\n  //          console.log(res.data);\n  //          console.log('successfully updated')\n  //        })\n  //        .catch(e => {\n  //          console.log(e);\n  //        })\n  //  }\n  //}\n\n//  useEffect(() => {\n//    if (user && waitRetrieval) {\n//      retrieveFavoriteMovies();\n//    }\n//  }, [user, waitRetrieval]);\n\n  useEffect(() => {\n    if (favorites && deleteIndex, insertIndex) {\n      reorderFavorites(favorites, deleteIndex, insertIndex);\n    }\n  }, [user, favorites, deleteIndex, insertIndex])\n\n  const renderCard = useCallback((card, index) => {\n    return (\n      <DnDCard\n        key={card.id}\n        index={index}\n        id={card.id}\n        text={card.text}\n        poster={card.poster}\n        moveCard={moveCard}\n      />\n    )\n  }, [])\n  return (\n    <>\n      <div style={style}>\n        {cards.map((card, i) => renderCard(card, i))}\n      </div>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}