{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/DnDCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes.js';\nimport Card from 'react-bootstrap/Card';\nimport \"./Favorites.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  padding: '10px',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move'\n};\nexport const DnDCard = _ref => {\n  _s();\n\n  let {\n    id,\n    text,\n    poster,\n    index,\n    moveCard,\n    saveCards\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    handlerId,\n    isOver\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n        isOver: monitor.didDrop\n      };\n    },\n\n    hover(item, monitor) {\n      var _ref$current;\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index; // Don't replace items with themselves\n\n      if (dragIndex === hoverIndex) {\n        return;\n      } // Determine rectangle on screen\n\n\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect(); // Get vertical middle\n\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2; // Determine mouse position\n\n      const clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top; // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      } // Dragging upwards\n\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      } // Time to actually perform the action\n\n\n      moveCard(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return {\n        id,\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  if (isOver) {\n    saveCards();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    \"data-handler-id\": handlerId,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"favoritesCard\",\n      children: [index < 9 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favoritesNumber favoritesNumberOneDigit\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favoritesNumber favoritesNumberTwoDigit\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"favoritesPoster\",\n          src: poster + \"/100px180\",\n          onError: _ref2 => {\n            let {\n              currentTarget\n            } = _ref2;\n            currentTarget.onerror = null;\n            currentTarget.src = \"../images/NoPosterAvailable-crop.jpeg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favoritesTitle\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DnDCard, \"QeQqZNtY7qPPUGkb8hCHrY+0ZcU=\", false, function () {\n  return [useDrop, useDrag];\n});\n\n_c = DnDCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DnDCard\");","map":{"version":3,"names":["React","useRef","useDrag","useDrop","ItemTypes","Card","style","padding","marginBottom","backgroundColor","cursor","DnDCard","id","text","poster","index","moveCard","saveCards","ref","handlerId","isOver","drop","accept","CARD","collect","monitor","getHandlerId","didDrop","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","opacity","currentTarget","onerror","src"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/DnDCard.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { ItemTypes } from './ItemTypes.js'\nimport Card from 'react-bootstrap/Card';\n\nimport \"./Favorites.css\";\n\nconst style = {\n  padding: '10px',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nexport const DnDCard = ({ id, text, poster, index, moveCard, saveCards }) => {\n  const ref = useRef(null)\n  const [{ handlerId, isOver }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n        isOver: monitor.didDrop\n      }\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return { id, index }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  if (isOver) {\n    saveCards();\n  }\n  return (\n    <div ref={ref} style={{ ...style, opacity }} data-handler-id={handlerId}>\n      <Card className=\"favoritesCard\">\n        { index < 9 ?\n        <div className=\"favoritesNumber favoritesNumberOneDigit\">\n          { index + 1 }\n        </div>\n        :\n        <div className=\"favoritesNumber favoritesNumberTwoDigit\">\n          { index + 1 }\n        </div>\n        }\n        <div>\n        <Card.Img\n          className=\"favoritesPoster\"\n          src={poster+\"/100px180\"}\n          onError={({ currentTarget }) => {\n            currentTarget.onerror = null;\n            currentTarget.src=\"../images/NoPosterAvailable-crop.jpeg\";\n          }}/>\n          </div>\n          <div className=\"favoritesTitle\">\n            { text }\n          </div>\n      </Card>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}