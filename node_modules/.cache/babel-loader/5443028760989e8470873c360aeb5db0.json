{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link, useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let params = useParams();\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n\n  const getMovie = id => {\n    MovieDataService.getId(id).then(res => {\n      setMovie(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getMovie(params.id);\n  }, [params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"bigPicture\",\n              src: movie.poster + \"/100px250\",\n              fluid: true,\n              onError: _ref2 => {\n                let {\n                  currentTarget\n                } = _ref2;\n                currentTarget.onerror = null;\n                currentTarget.src = \"../../images/NoPosterAvailable-crop.jpeg\";\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: movie.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + params.id + \"/review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), movie.reviews.map((review, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 reviewsText\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [review.name + \" reviewed on \", \" \", moment(review.date).format(\"Do MMMM YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review\",\n                  children: review.review\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), user && user.googleId === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: \"/movies/\" + params.id + \"/review\"\n                      },\n                      state: {\n                        currentReview: review\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      onClick: () => {\n                        var deleteData = {\n                          review_id: review.id,\n                          user_id: user.googleId\n                        };\n                        MovieDataService.deleteReview(deleteData).then(response => {\n                          setMovie(prevState => {\n                            prevState.reviews.splice(index, 1);\n                            return { ...prevState\n                            };\n                          });\n                        }).catch(e => {\n                          console.log(e);\n                        });\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"vc4Zi26qC0bA+sy2WhEd23WJ/9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","MovieDataService","Link","useParams","Card","Container","Image","Col","Row","Button","moment","Movie","user","params","movie","setMovie","id","title","rated","reviews","getMovie","getId","then","res","data","catch","e","console","log","poster","currentTarget","onerror","src","plot","map","review","index","name","date","format","googleId","user_id","pathname","currentReview","deleteData","review_id","deleteReview","response","prevState","splice"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Movie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link, useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\n\nconst Movie = ({ user }) => {\n    let params = useParams();\n\n    const [movie, setMovie] = useState({\n        id: null,\n        title: \"\",\n        rated: \"\",\n        reviews: []\n    });\n\n    const getMovie = id => {\n        MovieDataService.getId(id)\n        .then(res => {\n            setMovie(res.data)\n        })\n        .catch(e => {\n            console.log(e);\n        })\n    }\n\n    useEffect(() => {\n        getMovie(params.id)\n    }, [params.id]);\n    \n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                    <div className=\"poster\">\n                        <Image\n                        className=\"bigPicture\"\n                        src={movie.poster+\"/100px250\"}\n                        fluid\n                        onError={({ currentTarget }) => {\n                            currentTarget.onerror = null;\n                            currentTarget.src=\"../../images/NoPosterAvailable-crop.jpeg\";\n                        }} />\n                    </div>\n                    </Col>\n                    <Col>\n                    <Card>\n                        <Card.Header as=\"h5\">{movie.title}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                {movie.plot}\n                            </Card.Text>\n                            { user &&\n                                <Link to={\"/movies/\" + params.id + \"/review\"}>\n                                    Add Review\n                                    </Link>}\n                        </Card.Body>\n                    </Card>\n                    <h2>Reviews</h2>\n                    <br></br>\n                    { movie.reviews.map((review, index) => {\n                        return (\n                            <div className=\"d-flex\" key={index}>\n                                <div className=\"flex-shrink-0 reviewsText\">\n                                    <h5>{review.name + \" reviewed on \"} { moment(review.date).format(\"Do MMMM YYYY\") }</h5>\n                                    <p className=\"review\">{review.review}</p>\n                                    { user && user.googleId === review.user_id &&\n                                        <Row>\n                                            <Col>\n                                            <Link to={{\n                                                pathname: \"/movies/\"+params.id+\"/review\"\n                                            }}\n                                            state = {{\n                                                currentReview: review\n                                            }} >\n                                                Edit\n                                                </Link>\n                                                </Col>\n                                                <Col>\n                                                <Button variant=\"link\" onClick={ () =>\n                                                {\n                                                    var deleteData = {\n                                                        review_id: review.id,\n                                                        user_id: user.googleId\n                                                    }\n                                                    MovieDataService.deleteReview(deleteData)\n                                                        .then(response => {\n                                                            setMovie((prevState) => {\n                                                            prevState.reviews.splice(index, 1);\n                                                            return ({\n                                                                ...prevState\n                                                            })\n                                                        })})\n                                                        .catch(e => {\n                                                            console.log(e)\n                                                        })\n                                                } }>\n                                                    Delete\n                                                    </Button>\n                                                </Col>\n                                        </Row>\n                                        }\n                                </div>\n                            </div>\n                        )\n                    })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module"}