{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport \"./Favorites.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 500,\n  margin: '1em'\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites,\n    doSaveFaves,\n    reorderFavorites,\n    favoritesMoviesList\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [insertIndex, setInsertIndex] = useState(null);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  });\n  useEffect(() => {\n    let sortFavorites = cards.map(c => c.id);\n    reorderFavorites(sortFavorites);\n  }, [cards]);\n  useEffect(() => {\n    console.log(favoritesMoviesList);\n\n    if (favoritesMoviesList.length > 0) {\n      setCards(favoritesMoviesList);\n    }\n  }, [favoritesMoviesList]);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"tRc4ISFsLVIyhnNEZa2xuD7qe3k=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","useCallback","useEffect","useState","DnDCard","style","width","margin","Container","user","favorites","doSaveFaves","reorderFavorites","favoritesMoviesList","cards","setCards","deleteIndex","setDeleteIndex","insertIndex","setInsertIndex","moveCard","dragIndex","hoverIndex","prevCards","$splice","sortFavorites","map","c","id","console","log","length","renderCard","card","index","text","poster","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport \"./Favorites.css\";\n\nconst style = {\n  width: 500,\n  margin: '1em',\n}\n\nexport const Container = ({ user, favorites, doSaveFaves, reorderFavorites, favoritesMoviesList }) => {\n\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState(null);\n  const [insertIndex, setInsertIndex] = useState(null);\n\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n  })\n\n  useEffect(() => {\n    let sortFavorites = cards.map(c => c.id)\n    reorderFavorites(sortFavorites)\n  }, [cards])\n\n  useEffect(() => {\n    console.log(favoritesMoviesList);\n    if (favoritesMoviesList.length > 0) {\n      setCards(favoritesMoviesList);\n    }\n  }, [favoritesMoviesList])\n\n  const renderCard = useCallback((card, index) => {\n    return (\n      <DnDCard\n        key={card.id}\n        index={index}\n        id={card.id}\n        text={card.text}\n        poster={card.poster}\n        moveCard={moveCard}\n      />\n    )\n  }, [])\n  return (\n    <>\n      <div style={style}>\n        {cards.map((card, i) => renderCard(card, i))}\n      </div>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,GADK;EAEZC,MAAM,EAAE;AAFI,CAAd;AAKA,OAAO,MAAMC,SAAS,GAAG,QAA6E;EAAA;;EAAA,IAA5E;IAAEC,IAAF;IAAQC,SAAR;IAAmBC,WAAnB;IAAgCC,gBAAhC;IAAkDC;EAAlD,CAA4E;EAEpG,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;EAEA,MAAMiB,QAAQ,GAAGnB,WAAW,CAAC,CAACoB,SAAD,EAAYC,UAAZ,KAA2B;IACpDP,QAAQ,CAAEQ,SAAD,IACPxB,MAAM,CAACwB,SAAD,EAAY;MAChBC,OAAO,EAAE,CACP,CAACH,SAAD,EAAY,CAAZ,CADO,EAEP,CAACC,UAAD,EAAa,CAAb,EAAgBC,SAAS,CAACF,SAAD,CAAzB,CAFO;IADO,CAAZ,CADA,CAAR;EAQH,CAT2B,CAA5B;EAWAnB,SAAS,CAAC,MAAM;IACd,IAAIuB,aAAa,GAAGX,KAAK,CAACY,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAjB,CAApB;IACAhB,gBAAgB,CAACa,aAAD,CAAhB;EACD,CAHQ,EAGN,CAACX,KAAD,CAHM,CAAT;EAKAZ,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAR,CAAYjB,mBAAZ;;IACA,IAAIA,mBAAmB,CAACkB,MAApB,GAA6B,CAAjC,EAAoC;MAClChB,QAAQ,CAACF,mBAAD,CAAR;IACD;EACF,CALQ,EAKN,CAACA,mBAAD,CALM,CAAT;EAOA,MAAMmB,UAAU,GAAG/B,WAAW,CAAC,CAACgC,IAAD,EAAOC,KAAP,KAAiB;IAC9C,oBACE,QAAC,OAAD;MAEE,KAAK,EAAEA,KAFT;MAGE,EAAE,EAAED,IAAI,CAACL,EAHX;MAIE,IAAI,EAAEK,IAAI,CAACE,IAJb;MAKE,MAAM,EAAEF,IAAI,CAACG,MALf;MAME,QAAQ,EAAEhB;IANZ,GACOa,IAAI,CAACL,EADZ;MAAA;MAAA;MAAA;IAAA,QADF;EAUD,CAX6B,EAW3B,EAX2B,CAA9B;EAYA,oBACE;IAAA,uBACE;MAAK,KAAK,EAAEvB,KAAZ;MAAA,UACGS,KAAK,CAACY,GAAN,CAAU,CAACO,IAAD,EAAOI,CAAP,KAAaL,UAAU,CAACC,IAAD,EAAOI,CAAP,CAAjC;IADH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAOD,CAhDM;;GAAM7B,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}