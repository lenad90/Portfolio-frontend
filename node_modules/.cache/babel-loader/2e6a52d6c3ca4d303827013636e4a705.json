{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 500,\n  margin: '1em'\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [canUpdate, setCanUpdate] = useState(false);\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user) {\n      FavoritesListDataService.getFavoriteMovies(user.googleId).then(res => {\n        setCards(res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n    console.log(favorites);\n    let temp = favorites.splice(dragIndex, 1)[0];\n    favorites.splice(hoverIndex, 0, temp);\n    updateFavoritesSort();\n  }, []);\n  const updateFavoritesSort = useCallback(() => {\n    if (user) {\n      var data = {\n        _id: user.googleId,\n        favorites: favorites\n      };\n\n      if (data !== null) {\n        FavoritesDataService.updateFavorites(data).then(res => {\n          console.log(res.data);\n          console.log('successfully updated');\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    }\n  });\n  useEffect(() => {\n    retrieveFavoriteMovies();\n  }, [user, favorites]);\n  setCanUpdate(true);\n  const renderCard = useCallback((card, index) => {\n    console.log(card);\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"G8aOADRP96cjU1kT9y+1ErJSrVE=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","useCallback","useEffect","useState","useRef","DnDCard","FavoritesListDataService","FavoritesDataService","style","width","margin","Container","user","favorites","cards","setCards","canUpdate","setCanUpdate","retrieveFavoriteMovies","getFavoriteMovies","googleId","then","res","data","catch","e","console","log","moveCard","dragIndex","hoverIndex","prevCards","$splice","temp","splice","updateFavoritesSort","_id","updateFavorites","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nconst style = {\n  width: 500,\n  margin: '1em',\n}\n\nexport const Container = ({ user, favorites }) => {\n\n    const [cards, setCards] = useState([])\n    const [canUpdate, setCanUpdate] = useState(false);\n\n    const retrieveFavoriteMovies = useCallback(() => {\n      if (user) {\n        FavoritesListDataService.getFavoriteMovies(user.googleId)\n          .then(res => {\n            setCards(res.data);\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [user]);\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n      console.log(favorites)\n      let temp = favorites.splice(dragIndex, 1)[0]\n      favorites.splice(hoverIndex, 0, temp)\n      updateFavoritesSort();\n    }, [])\n\n    const updateFavoritesSort = useCallback(() => {\n      if (user) {\n        var data = {\n          _id: user.googleId,\n          favorites: favorites\n        }\n        if (data !== null) {\n          FavoritesDataService.updateFavorites(data)\n            .then(res => {\n              console.log(res.data);\n              console.log('successfully updated')\n            })\n            .catch(e => {\n              console.log(e);\n            })\n        }\n      }\n    })\n\n    useEffect(() => {\n      retrieveFavoriteMovies();\n    }, [user, favorites]);\n    setCanUpdate(true);\n\n    const renderCard = useCallback((card, index) => {\n      console.log(card)\n      return (\n        <DnDCard\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          poster={card.poster}\n          moveCard={moveCard}\n        />\n      )\n    }, [])\n    return (\n      <>\n        <div style={style}>\n          {cards.map((card, i) => renderCard(card, i))}\n        </div>\n      </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}