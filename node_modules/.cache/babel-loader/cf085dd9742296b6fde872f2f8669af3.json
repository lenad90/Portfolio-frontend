{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { memo, useRef, useCallback, useEffect, useState } from 'react';\nimport { Card } from './Card.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [updateFav, setUpdateFav] = useState(false);\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user) {\n      FavoritesListDataService.getFavoriteMovies(user.googleId).then(res => {\n        setCards(res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n    favorites.splice(hoverIndex, 0, favorites.splice(dragIndex, 1)[0]);\n    setUpdateFav(true);\n  }, []);\n  const updateFavoritesSort = useCallback(() => {\n    if (user && favorites && updateFav) {\n      var data = {\n        _id: user.googleId,\n        favorites: favorites\n      };\n      FavoritesDataService.updateFavorites(data).then(res => {\n        console.log(res.data);\n        console.log('successfully updated');\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [updateFav]);\n  useEffect(() => {\n    updateFavoritesSort();\n  }, [favorites]);\n  useEffect(() => {\n    retrieveFavoriteMovies();\n  }, [user, favorites]);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoritesPanel\",\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"y5rvZoGbW8KLqP2R4sucWNBNr80=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","memo","useRef","useCallback","useEffect","useState","Card","FavoritesListDataService","FavoritesDataService","Container","user","favorites","cards","setCards","updateFav","setUpdateFav","retrieveFavoriteMovies","getFavoriteMovies","googleId","then","res","data","catch","e","console","log","moveCard","dragIndex","hoverIndex","prevCards","$splice","splice","updateFavoritesSort","_id","updateFavorites","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { memo, useRef, useCallback, useEffect, useState } from 'react'\nimport { Card } from './Card.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nexport const Container = ({ user, favorites}) => {\n\n    const [cards, setCards] = useState([])\n    const [updateFav, setUpdateFav] = useState(false);\n\n    const retrieveFavoriteMovies = useCallback(() => {\n      if (user) {\n        FavoritesListDataService.getFavoriteMovies(user.googleId)\n          .then(res => {\n            setCards(res.data);\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [user]);\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        })\n      )\n      favorites.splice(hoverIndex, 0, favorites.splice(dragIndex, 1)[0])\n      setUpdateFav(true);\n    }, [])\n\n    const updateFavoritesSort = useCallback(() => {\n      if (user && favorites && updateFav) {\n        var data = {\n          _id: user.googleId,\n          favorites: favorites\n        }\n        FavoritesDataService.updateFavorites(data)\n          .then(res => {\n            console.log(res.data);\n            console.log('successfully updated')\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [updateFav])\n\n    useEffect(() => {\n      updateFavoritesSort();\n    }, [favorites])\n\n    useEffect(() => {\n      retrieveFavoriteMovies();\n    }, [user, favorites]);\n\n    const renderCard = useCallback((card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          poster={card.poster}\n          moveCard={moveCard}\n        />\n      )\n    }, [])\n    return (\n      <>\n        <div className=\"favoritesPanel\">{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}