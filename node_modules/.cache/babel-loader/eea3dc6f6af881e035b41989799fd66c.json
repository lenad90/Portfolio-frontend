{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DnDCard } from './DnDCard.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 500,\n  margin: '1em'\n};\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites,\n    waitRetrieval\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState();\n  const [insertIndex, setInsertIndex] = useState();\n  console.log(user);\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user && waitRetrieval) {\n      FavoritesListDataService.getFavoriteMovies(user.googleId).then(res => {\n        console.log(`in retrieve fav movies ${res.data}`);\n        setCards(res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user, waitRetrieval]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n    setDeleteIndex(dragIndex);\n    setInsertIndex(hoverIndex); //  console.log(favorites)\n    //  let temp = favorites.splice(dragIndex, 1)[0]\n    //  favorites.splice(hoverIndex, 0, temp)\n    //  updateFavoritesSort();\n  }, [favorites]);\n\n  const reorderFavorites = () => {};\n\n  const updateFavoritesSort = useCallback(favorites => {\n    if (user) {\n      var data = {\n        _id: user.googleId,\n        favorites: favorites\n      };\n      FavoritesDataService.updateFavorites(data).then(res => {\n        console.log(res.data);\n        console.log('successfully updated');\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user && waitRetrieval) {\n      retrieveFavoriteMovies();\n    }\n  }, [user, waitRetrieval]);\n  useEffect(() => {\n    if (waitRetrieval) {\n      console.log(updateFavorites);\n      updateFavoritesSort(favorites);\n    }\n  }, [favorites, waitRetrieval]);\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(DnDCard, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"vI36VoAtDJdT0iW5/B/5wLoih98=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","useCallback","useEffect","useState","DnDCard","FavoritesListDataService","FavoritesDataService","style","width","margin","Container","user","favorites","waitRetrieval","cards","setCards","deleteIndex","setDeleteIndex","insertIndex","setInsertIndex","console","log","retrieveFavoriteMovies","getFavoriteMovies","googleId","then","res","data","catch","e","moveCard","dragIndex","hoverIndex","prevCards","$splice","reorderFavorites","updateFavoritesSort","_id","updateFavorites","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { DnDCard } from './DnDCard.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nconst style = {\n  width: 500,\n  margin: '1em',\n}\n\nexport const Container = ({ user, favorites, waitRetrieval }) => {\n\n  const [cards, setCards] = useState([]);\n  const [deleteIndex, setDeleteIndex] = useState();\n  const [insertIndex, setInsertIndex] = useState();\n  console.log(user);\n\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user && waitRetrieval) {\n      FavoritesListDataService.getFavoriteMovies(user.googleId)\n        .then(res => {\n          console.log(`in retrieve fav movies ${res.data}`);\n          setCards(res.data);\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    }\n  }, [user, waitRetrieval]);\n\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n      setDeleteIndex(dragIndex);\n      setInsertIndex(hoverIndex)\n    //  console.log(favorites)\n    //  let temp = favorites.splice(dragIndex, 1)[0]\n    //  favorites.splice(hoverIndex, 0, temp)\n    //  updateFavoritesSort();\n  }, [favorites])\n  \n  const reorderFavorites = () => {\n\n  }\n\n  const updateFavoritesSort = useCallback((favorites) => {\n    if (user) {\n      var data = {\n        _id: user.googleId,\n        favorites: favorites\n      }\n        FavoritesDataService.updateFavorites(data)\n          .then(res => {\n            console.log(res.data);\n            console.log('successfully updated')\n          })\n          .catch(e => {\n            console.log(e);\n          })\n    }\n  }, [user])\n\n  useEffect(() => {\n    if (user && waitRetrieval) {\n      retrieveFavoriteMovies();\n    }\n  }, [user, waitRetrieval]);\n\n  useEffect(() => {\n    if (waitRetrieval) {\n      console.log(updateFavorites)\n      updateFavoritesSort(favorites);\n    }\n  }, [favorites, waitRetrieval])\n\n  const renderCard = useCallback((card, index) => {\n    return (\n      <DnDCard\n        key={card.id}\n        index={index}\n        id={card.id}\n        text={card.text}\n        poster={card.poster}\n        moveCard={moveCard}\n      />\n    )\n  }, [])\n  return (\n    <>\n      <div style={style}>\n        {cards.map((card, i) => renderCard(card, i))}\n      </div>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}