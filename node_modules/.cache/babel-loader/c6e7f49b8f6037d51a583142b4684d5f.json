{"ast":null,"code":"var _jsxFileName = \"/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js\",\n    _s = $RefreshSig$();\n\nimport update from 'immutability-helper';\nimport React, { memo, useRef, useCallback, useEffect, useState } from 'react';\nimport { Card } from './Card.js';\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist';\nimport FavoritesDataService from '../services/favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Container = _ref => {\n  _s();\n\n  let {\n    user,\n    favorites\n  } = _ref;\n  console.log(user);\n  console.log(favorites);\n  const [cards, setCards] = useState([]);\n  const firstUpdate = useRef(true);\n  const retrieveFavoriteMovies = useCallback(() => {\n    if (user) {\n      console.log(favorites);\n      FavoritesListDataService.getFavoriteMovies(user.googleId).then(res => {\n        setCards(res.data);\n\n        if (firstUpdate.current) {\n          firstUpdate.current = false;\n        }\n\n        console.log(firstUpdate.current);\n        console.log(user);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [user]);\n  const moveCard = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n    console.log(favorites);\n    let temp = favorites.splice(dragIndex, 1)[0];\n    favorites.splice(hoverIndex, 0, temp);\n    updateFavoritesSort();\n  }, []);\n  const updateFavoritesSort = useCallback(() => {\n    if (user) {\n      var data = {\n        _id: user.googleId,\n        favorites: favorites\n      };\n      FavoritesDataService.updateFavorites(data).then(res => {\n        console.log(res.data);\n        console.log('successfully updated');\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (user) {\n      updateFavoritesSort();\n    }\n  }, [favorites]);\n  useEffect(() => {\n    retrieveFavoriteMovies();\n  }, [user, favorites]); //    useEffect(() => {\n  //      user = JSON.parse(window.sessionStorage.getItem('SelectedUser'))\n  //      console.log(user)\n  //    }, [])\n\n  const renderCard = useCallback((card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      index: index,\n      id: card.id,\n      text: card.text,\n      poster: card.poster,\n      moveCard: moveCard\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoritesPanel\",\n      children: cards.map((card, i) => renderCard(card, i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Container, \"e8tir5CAph1d3l7b0nzZFtM6sbg=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","React","memo","useRef","useCallback","useEffect","useState","Card","FavoritesListDataService","FavoritesDataService","Container","user","favorites","console","log","cards","setCards","firstUpdate","retrieveFavoriteMovies","getFavoriteMovies","googleId","then","res","data","current","catch","e","moveCard","dragIndex","hoverIndex","prevCards","$splice","temp","splice","updateFavoritesSort","_id","updateFavorites","renderCard","card","index","id","text","poster","map","i"],"sources":["/Users/lenaduong/Desktop/MERN Project/frontend/src/components/Container.js"],"sourcesContent":["import update from 'immutability-helper'\nimport React, { memo, useRef, useCallback, useEffect, useState } from 'react'\nimport { Card } from './Card.js'\nimport \"./Favorites.css\";\nimport FavoritesListDataService from '../services/favoriteslist'\nimport FavoritesDataService from '../services/favorites'\n\nexport const Container = ({ user, favorites}) => {\n    console.log(user)\n    console.log(favorites)\n\n    const [cards, setCards] = useState([])\n    const firstUpdate = useRef(true);\n    const retrieveFavoriteMovies = useCallback(() =>  {\n      if (user) {\n        console.log(favorites)\n        FavoritesListDataService.getFavoriteMovies(user.googleId)\n          .then(res => {\n            setCards(res.data);\n            if (firstUpdate.current) {\n              firstUpdate.current = false;\n            }\n            console.log(firstUpdate.current)\n            console.log(user)\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [user]);\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards((prevCards) =>\n        update(prevCards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, prevCards[dragIndex]],\n          ],\n        }),\n      )\n      console.log(favorites)\n      let temp = favorites.splice(dragIndex, 1)[0]\n      favorites.splice(hoverIndex, 0, temp)\n      updateFavoritesSort();\n    }, [])\n\n    const updateFavoritesSort = useCallback(() => {\n      if (user) {\n        var data = {\n          _id: user.googleId,\n          favorites: favorites\n        }\n        FavoritesDataService.updateFavorites(data)\n          .then(res => {\n            console.log(res.data);\n            console.log('successfully updated')\n          })\n          .catch(e => {\n            console.log(e);\n          })\n      }\n    }, [])\n\n    useEffect(() => {\n      if (user) {\n        updateFavoritesSort();\n      }\n    }, [favorites])\n\n    useEffect(() => {\n      retrieveFavoriteMovies();\n    }, [user, favorites]);\n\n//    useEffect(() => {\n//      user = JSON.parse(window.sessionStorage.getItem('SelectedUser'))\n//      console.log(user)\n//    }, [])\n\n    const renderCard = useCallback((card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          poster={card.poster}\n          moveCard={moveCard}\n        />\n      )\n    }, [])\n    return (\n      <>\n        <div className=\"favoritesPanel\">{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAO,iBAAP;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AACA,OAAOC,oBAAP,MAAiC,uBAAjC;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,IAAF;IAAQC;EAAR,CAAuB;EAC7CC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACAE,OAAO,CAACC,GAAR,CAAYF,SAAZ;EAEA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMW,WAAW,GAAGd,MAAM,CAAC,IAAD,CAA1B;EACA,MAAMe,sBAAsB,GAAGd,WAAW,CAAC,MAAO;IAChD,IAAIO,IAAJ,EAAU;MACRE,OAAO,CAACC,GAAR,CAAYF,SAAZ;MACAJ,wBAAwB,CAACW,iBAAzB,CAA2CR,IAAI,CAACS,QAAhD,EACGC,IADH,CACQC,GAAG,IAAI;QACXN,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAR;;QACA,IAAIN,WAAW,CAACO,OAAhB,EAAyB;UACvBP,WAAW,CAACO,OAAZ,GAAsB,KAAtB;QACD;;QACDX,OAAO,CAACC,GAAR,CAAYG,WAAW,CAACO,OAAxB;QACAX,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACD,CARH,EASGc,KATH,CASSC,CAAC,IAAI;QACVb,OAAO,CAACC,GAAR,CAAYY,CAAZ;MACD,CAXH;IAYD;EACF,CAhByC,EAgBvC,CAACf,IAAD,CAhBuC,CAA1C;EAkBA,MAAMgB,QAAQ,GAAGvB,WAAW,CAAC,CAACwB,SAAD,EAAYC,UAAZ,KAA2B;IACtDb,QAAQ,CAAEc,SAAD,IACP9B,MAAM,CAAC8B,SAAD,EAAY;MAChBC,OAAO,EAAE,CACP,CAACH,SAAD,EAAY,CAAZ,CADO,EAEP,CAACC,UAAD,EAAa,CAAb,EAAgBC,SAAS,CAACF,SAAD,CAAzB,CAFO;IADO,CAAZ,CADA,CAAR;IAQAf,OAAO,CAACC,GAAR,CAAYF,SAAZ;IACA,IAAIoB,IAAI,GAAGpB,SAAS,CAACqB,MAAV,CAAiBL,SAAjB,EAA4B,CAA5B,EAA+B,CAA/B,CAAX;IACAhB,SAAS,CAACqB,MAAV,CAAiBJ,UAAjB,EAA6B,CAA7B,EAAgCG,IAAhC;IACAE,mBAAmB;EACpB,CAb2B,EAazB,EAbyB,CAA5B;EAeA,MAAMA,mBAAmB,GAAG9B,WAAW,CAAC,MAAM;IAC5C,IAAIO,IAAJ,EAAU;MACR,IAAIY,IAAI,GAAG;QACTY,GAAG,EAAExB,IAAI,CAACS,QADD;QAETR,SAAS,EAAEA;MAFF,CAAX;MAIAH,oBAAoB,CAAC2B,eAArB,CAAqCb,IAArC,EACGF,IADH,CACQC,GAAG,IAAI;QACXT,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACC,IAAhB;QACAV,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACD,CAJH,EAKGW,KALH,CAKSC,CAAC,IAAI;QACVb,OAAO,CAACC,GAAR,CAAYY,CAAZ;MACD,CAPH;IAQD;EACF,CAfsC,EAepC,EAfoC,CAAvC;EAiBArB,SAAS,CAAC,MAAM;IACd,IAAIM,IAAJ,EAAU;MACRuB,mBAAmB;IACpB;EACF,CAJQ,EAIN,CAACtB,SAAD,CAJM,CAAT;EAMAP,SAAS,CAAC,MAAM;IACda,sBAAsB;EACvB,CAFQ,EAEN,CAACP,IAAD,EAAOC,SAAP,CAFM,CAAT,CA9D6C,CAkEjD;EACA;EACA;EACA;;EAEI,MAAMyB,UAAU,GAAGjC,WAAW,CAAC,CAACkC,IAAD,EAAOC,KAAP,KAAiB;IAC9C,oBACE,QAAC,IAAD;MAEE,KAAK,EAAEA,KAFT;MAGE,EAAE,EAAED,IAAI,CAACE,EAHX;MAIE,IAAI,EAAEF,IAAI,CAACG,IAJb;MAKE,MAAM,EAAEH,IAAI,CAACI,MALf;MAME,QAAQ,EAAEf;IANZ,GACOW,IAAI,CAACE,EADZ;MAAA;MAAA;MAAA;IAAA,QADF;EAUD,CAX6B,EAW3B,EAX2B,CAA9B;EAYA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,UAAiCzB,KAAK,CAAC4B,GAAN,CAAU,CAACL,IAAD,EAAOM,CAAP,KAAaP,UAAU,CAACC,IAAD,EAAOM,CAAP,CAAjC;IAAjC;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKH,CAxFM;;GAAMlC,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}